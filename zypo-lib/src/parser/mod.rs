//! Parser module, containing the AST and type-checking hooked in.
pub mod ast;
pub mod scope;

mod lib;

pub use lib::*;

lalrpop_mod!(
    /// Backend of the parser, automatically generated by the LALRPOP crate from
    /// grammar files.
    /// 
    /// # Examples
    /// 
    /// Basic parsing to get an AST:
    /// 
    /// ```rust
    /// use zypo_lib::parser;
    /// 
    /// fn main() {
    ///     let input = "fun hi() {}";
    ///     let expected_ast = vec![
    ///         parser::ast::Function {
    ///             ident: "hi".to_string(),
    ///             body: vec![],
    ///             params: vec![],
    ///             docs: None,
    ///         }
    ///     ];
    /// 
    ///     let parsed_input = parser::grammar::GrammarParser::new()
    ///         .parse(input)
    ///         .unwrap();
    /// 
    ///     assert_eq!(parsed_input, expected_ast);
    /// }
    /// ```
    pub grammar,
    "/parser/grammar.rs"
);
